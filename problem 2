import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.axes_grid1 import make_axes_locatable

#plt.style.use('ggplot')

#a
P = np.array([[0.95, 0.05], [0, 1]])
x = np.array([0.99, 0.01])

probabilities = []
probabilities.append(x[0])
for _ in range (49):
	x = np.dot(P, x)
	probabilities.append(x[0])

print(probabilities)
plt.figure()
plt.plot(range(1,51), probabilities)
plt.title('Marginal probabilities for $P(X_n = 1)$ as function of $n$.', fontsize=14)
plt.xlabel('$n$')
plt.ylabel('$P(X_n = 1)$')
plt.show()


#b
def simulate_hill(n_sim, P, x):
	#geometrisk fordeling
	realizations = []

	for _ in range(n_sim):
		x = np.ones((50,), dtype=np.int)
		for i in range(1,50):
			if i == 1:
				prob = 0.99
			else:
				prob = 0.95
			random = np.random.uniform(0,1)
			if random > prob:
				for n in range(50-i):
					x[i+n] = 2
				break

		realizations.append(x)
	
		#riktig lengde på antall sim og antall veikryss
	return realizations


image = simulate_hill(25, P, x)

plt.figure()
ax = plt.gca()

im = ax.imshow(image)
plt.title('$25$ realizations as a function of time')
plt.xlabel('time')
plt.ylabel('Realization number')
divider = make_axes_locatable(ax)
cax = divider.append_axes("right", size="5%", pad=0.05)
plt.colorbar(im, cax=cax)
plt.gca().invert_yaxis() #må snu y-aksen og slutte x-aksen på 50
plt.show()
